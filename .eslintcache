[{"D:\\Projects\\VSC Web\\react\\cash-register-manager\\src\\index.js":"1","D:\\Projects\\VSC Web\\react\\cash-register-manager\\src\\App.js":"2"},{"size":218,"mtime":1609782922870,"results":"3","hashOfConfig":"4"},{"size":2958,"mtime":1609935264310,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"8"},"ar2k45",{"filePath":"9","messages":"10","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"11"},"D:\\Projects\\VSC Web\\react\\cash-register-manager\\src\\index.js",[],["12","13"],"D:\\Projects\\VSC Web\\react\\cash-register-manager\\src\\App.js",["14","15","16","17","18","19","20"],"import React, {useState, useEffect} from 'react';\r\nimport './App.css'\r\nimport $1 from './images/1$.png'\r\nimport $5 from './images/5$.png'\r\nimport $10 from './images/10$.png'\r\nimport $20 from './images/20$.png'\r\nimport $100 from './images/100$.png'\r\nimport $500 from './images/500$.png'\r\nimport $2000 from './images/2000$.png'\r\n\r\nfunction App() {\r\n  const [billAmount, setbillAmount] = useState('')\r\n  const [billState, setbillState] = useState(false)\r\n  const [cashAmount, setcashAmount] = useState('')\r\n  const [cashState, setcashState] = useState(false)\r\n  const [returnAmount, setreturnAmount] = useState(0)\r\n  const [notes, setnotes] = useState({\r\n    '2000':0,\r\n    '500': 0,\r\n    '100': 0,\r\n    '20': 0,\r\n    '10': 0,\r\n    '5': 0,\r\n    '1': 0,\r\n  })\r\n\r\n  useEffect(() => {\r\n    billAmount !== '' ? setbillState(true) : setbillState(false);\r\n    (cashAmount !== '') && (Number(cashAmount) >= Number(billAmount)) ? setcashState(true) : setcashState(false);\r\n  }, [billAmount, cashAmount])\r\n\r\n  useEffect(() => {\r\n    setnotes({\r\n      '2000':0,\r\n      '500': 0,\r\n      '100': 0,\r\n      '20': 0,\r\n      '10': 0,\r\n      '5': 0,\r\n      '1': 0,\r\n    })\r\n    setreturnAmount(0)\r\n  },[billAmount, cashAmount])\r\n;\r\n  const calcReturnAmount = () => {\r\n    const returncash = cashAmount - billAmount\r\n    setreturnAmount(returncash)\r\n    calcMinNotes(returncash)\r\n  }\r\n\r\n  const calcMinNotes = (returncash) => {\r\n    for(let note of Object.keys(notes).sort((a,b)=>b-a)) {\r\n      if(returncash>=note){\r\n        setnotes(prevState => ({\r\n          ...prevState,\r\n          [note]:Math.floor(returncash/note)\r\n        }))\r\n        const remainder = returncash % note\r\n        if(remainder !==0){\r\n          console.log(remainder)\r\n          calcMinNotes(remainder)\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n        <h1 className=\"Navbar\">Cash Register Manager App</h1>\r\n        <input type=\"number\" placeholder=\"Bill Amount\" value={billAmount} onChange={event => setbillAmount(event.target.value)}/>\r\n        {billState && <input type=\"number\" placeholder=\"Cash You Gave\" value={cashAmount} onChange={event => setcashAmount(event.target.value)}/>}\r\n        {cashState && <button onClick={calcReturnAmount}>Calculate Return Change</button>}\r\n        <h2>${returnAmount}</h2>\r\n        <p><img src={$1} width='130.0px' height='50px'/> <h2>x{notes[1]}</h2></p>\r\n        <p><img src={$5} width='130.0px' height='50px'/> <h2>x{notes[5]}</h2></p>\r\n        <p><img src={$10} width='130.0px' height='50px'/> <h2>x{notes[10]}</h2></p>\r\n        <p><img src={$20} width='130.0px' height='50px'/> <h2>x{notes[20]}</h2></p>\r\n        <p><img src={$100} width='130.0px' height='50px'/> <h2>x{notes[100]}</h2></p>\r\n        <p><img src={$500} width='130.0px' height='50px'/> <h2>x{notes[500]}</h2></p>\r\n        <p><img src={$2000} width='130.0px' height='50px'/> <h2>x{notes[2000]}</h2></p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;",{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":75,"column":12,"nodeType":"27","endLine":75,"endColumn":57},{"ruleId":"25","severity":1,"message":"26","line":76,"column":12,"nodeType":"27","endLine":76,"endColumn":57},{"ruleId":"25","severity":1,"message":"26","line":77,"column":12,"nodeType":"27","endLine":77,"endColumn":58},{"ruleId":"25","severity":1,"message":"26","line":78,"column":12,"nodeType":"27","endLine":78,"endColumn":58},{"ruleId":"25","severity":1,"message":"26","line":79,"column":12,"nodeType":"27","endLine":79,"endColumn":59},{"ruleId":"25","severity":1,"message":"26","line":80,"column":12,"nodeType":"27","endLine":80,"endColumn":59},{"ruleId":"25","severity":1,"message":"26","line":81,"column":12,"nodeType":"27","endLine":81,"endColumn":60},"no-native-reassign",["28"],"no-negated-in-lhs",["29"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]